Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-capme (20121213-0ubuntu0securityonion10) precise; urgency=low
 .
   * add support for Snorby timezones and saving pcap file
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ securityonion-capme-20121213/cron.d/capme
@@ -0,0 +1,8 @@
+# /etc/cron.d/capme
+#
+# crontab entry to delete pcap symlinks
+
+SHELL=/bin/sh
+PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
+
+* * * * * root find /var/www/capme/pcap/*.pcap -mmin +5 -delete >/dev/null 2>&1
--- securityonion-capme-20121213.orig/capme/index.php
+++ securityonion-capme-20121213/capme/index.php
@@ -4,7 +4,7 @@ include '.inc/functions.php';
 $s = 0;
 
 // Argument defaults
-$sip = $spt = $dip = $dpt = $stime = $etime = $usr = $pwd = $sancp = $event = $elsa = $bro = $tcpflow = '';
+$sip = $spt = $dip = $dpt = $stime = $etime = $usr = $pwd = $sancp = $event = $elsa = $bro = $tcpflow = $pcap = '';
 // Grab any arguments provided in URI
 if (isset($_REQUEST['sip']))      { $sip    = $_REQUEST['sip'];      $s++; }
 if (isset($_REQUEST['spt']))      { $spt    = $_REQUEST['spt'];      $s++; }
@@ -100,10 +100,11 @@ capME!
 </tr>
 
 <tr>
-<td class=capme_left>Transcript:</td>
+<td class=capme_left>Output:</td>
 <td class=capme_right>
 <input type=radio name=xscript class=capme_rad value="tcpflow"<?php echo $tcpflow;?>>tcpflow
 <input type=radio name=xscript class=capme_rad value="bro"<?php echo $bro;?>>bro
+<input type=radio name=xscript class=capme_rad value="pcap"<?php echo $pcap;?>>pcap
 </td>
 </tr>
 
--- /dev/null
+++ securityonion-capme-20121213/capme/.inc/timezone.php.sample
@@ -0,0 +1,11 @@
+<?php
+
+// If you've configured Snorby to render timestamps
+// in your local timezone, please set that timezone here.
+
+// For a full list of PHP timezones, please see:
+// http://php.net/manual/en/timezones.php
+
+$timezone = 'Etc/GMT';
+
+?>
--- securityonion-capme-20121213.orig/capme/.inc/callback.php
+++ securityonion-capme-20121213/capme/.inc/callback.php
@@ -25,6 +25,23 @@ $xscript = h2s($d[9]);
 $st = date("Y-m-d H:i:s", $st_unix);
 $et = date("Y-m-d H:i:s", $et_unix);
 
+// Fix Snorby timezone
+if ($sidsrc == "event") {
+
+	// load the user's timezone setting
+	include 'timezone.php';
+
+	// convert the start time from the user's timezone to UTC/GMT
+	$st = date_create($st, timezone_open($timezone));
+	date_timezone_set($st, timezone_open('Etc/GMT'));
+	$st = date_format($st, 'Y-m-d H:i:s');
+
+	// convert the end time from the user's timezone to UTC/GMT
+	$et = date_create($et, timezone_open($timezone));
+	date_timezone_set($et, timezone_open('Etc/GMT'));
+	$et = date_format($et, 'Y-m-d H:i:s');
+}
+
 // Defaults
 $err = 0;
 $fmtd = $debug = $errMsg = '';
@@ -138,8 +155,52 @@ if ($err == 1) {
 
     exec("../.scripts/$cmd",$raw);
 
+$found_pcap = 0;
+
     foreach ($raw as $line) {
 
+	/*
+	$DEBUG either looks like this:
+
+	DEBUG: Using archived data: /nsm/server_data/securityonion/archive/2013-11-08/doug-virtual-machine-eth1/10.0.2.15:1066_192.168.56.50:80-6.raw
+
+	OR it looks like this:
+
+	DEBUG: Raw data request sent to doug-virtual-machine-eth1.
+	DEBUG: Making a list of local log files.
+	DEBUG: Looking in /nsm/sensor_data/doug-virtual-machine-eth1/dailylogs/2013-11-08.
+	DEBUG: Making a list of local log files in /nsm/sensor_data/doug-virtual-machine-eth1/dailylogs/2013-11-08.
+	DEBUG: Available log files:
+	DEBUG: 1383910121
+	DEBUG: Creating unique data file: /usr/sbin/tcpdump -r /nsm/sensor_data/doug-virtual-machine-eth1/dailylogs/2013-11-08/snort.log.1383910121 -w /tmp/10.0.2.15:1066_192.168.56.50:80-6.raw (ip and host 10.0.2.15 and host 192.168.56.50 and port 1066 and port 80 and proto 6) or (vlan and host 10.0.2.15 and host 192.168.56.50 and port 1066 and port 80 and proto 6)
+	DEBUG: Receiving raw file from sensor.
+	*/
+
+	$archive = 'Using archived data:';
+	$pos = strpos($line, $archive);
+	if ($pos !== false) {
+		$found_pcap = 1;
+		$pieces = explode(" ", $line);
+		$full_filename = $pieces[4];
+		$pieces = explode("/", $full_filename);
+		$filename = $pieces[7];
+	}
+
+	$unique = 'Creating unique data file:';
+	$pos = strpos($line, $unique);
+	if ($pos !== false) {
+		$found_pcap = 1;
+		$pieces = explode(" ", $line);
+		$sensor_filename = $pieces[7];
+		$server_filename = $pieces[9];
+		$pieces = explode("/", $sensor_filename);
+		$sensorname = $pieces[3];
+		$dailylog = $pieces[5];
+		$pieces = explode("/", $server_filename);
+		$filename = $pieces[2];
+		$full_filename = "/nsm/server_data/securityonion/archive/$dailylog/$sensorname/$filename";
+	}	
+
         $line = htmlspecialchars($line);
         $type = substr($line, 0,3);
 
@@ -147,7 +208,7 @@ if ($err == 1) {
             case "DEB": $debug .= preg_replace('/^DEBUG:.*$/', "<span class=txtext_dbg>$0</span>", $line) . "<br>"; $line = ''; break;
             case "HDR": $line = preg_replace('/(^HDR:)(.*$)/', "<span class=txtext_hdr>$2</span>", $line); break;
             case "DST": $line = preg_replace('/^DST:.*$/', "<span class=txtext_dst>$0</span>", $line); break;
-            case "SRC": $line = preg_replace('/^SRC:.*$/', "<span class=txtext_src>$0</span>", $line); break;       
+            case "SRC": $line = preg_replace('/^SRC:.*$/', "<span class=txtext_src>$0</span>", $line); break;
         }
 
         if (strlen($line) > 0) {
@@ -155,11 +216,22 @@ if ($err == 1) {
         }
     }
 
+    $tmpstring = rand();
+    $filename_random = str_replace(".raw", "", "$filename-$tmpstring");
+    $filename_download = "$filename_random.pcap";
+    $link = "/var/www/capme/pcap/$filename_download";
+    symlink($full_filename, $link);
+	
     // Add query to debug
     $debug .= "<span class=txtext_qry>QUERY: " . $queries[$sidsrc] . "</span>";
 
-    $result = array("tx"  => "$fmtd",
-                    "dbg" => "$debug",
+    $mytx = $fmtd;
+    if ($xscript == "pcap") {
+    	$mytx = $filename_download;
+    }
+
+    $result = array("tx"  => "$mytx",
+                    "dbg" => "$debug<br><a href=\"/capme/pcap/$filename_download\">$filename_download</a>",
                     "err" => "$errMsg");
 }
 
--- /dev/null
+++ securityonion-capme-20121213/capme/pcap/index.php
@@ -0,0 +1,5 @@
+<?php
+$host  = $_SERVER['HTTP_HOST'];
+header("Location: https://$host/capme");
+exit;
+?>
--- securityonion-capme-20121213.orig/capme/.js/capme.js
+++ securityonion-capme-20121213/capme/.js/capme.js
@@ -36,7 +36,7 @@ $(document).ready(function(){
  
     $(".capme_submit").click(function() {
        frmArgs = $('input[value!=""]').length;
-       if (frmArgs == 14) {
+       if (frmArgs == 15) {
             reqCap("usefrm");
         } else {
             theMsg("Please complete all form fields");
@@ -113,7 +113,9 @@ $(document).ready(function(){
                         txt += "</td></tr>";
                         txt += "<tr>";
                         txt += "<td class=capme_text>";
-                        txt += txResult;
+			if (txResult.indexOf("OS Fingerprint:") >= 0) {
+				txt += txResult;
+			}
                         txt += txDebug;
                         txt += txError;
                         txt += "</td></tr></table>";
@@ -122,6 +124,10 @@ $(document).ready(function(){
                         $(".capme_div").hide();
                         $(".capme_result").show();
                         $(".capme_msg").fadeOut('slow');
+			if (txResult.indexOf("OS Fingerprint:") == -1) {
+				url = "/capme/pcap/" + txResult;
+				window.open(url, "_self");
+			}
                     } else {
                         theMsg(txError);
                     }
